{style:float:right;}Языки BXL/B# - руководство{style}
{style:float:left;}Атрибуты в BXL{style}
[bx-index Вернуться к оглавлению]
= Атрибуты в BXL

Синтаксис BXL атрибутов достаточно подробно описан в [bx-bxl-syntax общий синтаксис BXL]

Здесь подробнее остановимся на более точных нюансах

== В отличие от XML атриубты могут включаться как в заголовки, так и в тело элементов

Это сделано по соображениям читаемости кода и упрощения поиска, копирования и переноса атрибутов

Это абсолютно равноправные определения, при этом атрибуты следуют той же логике вложенности (через табуляцию), что и элементы

[[code]]
a x=1 y=2
a x=1
	y=2 # табуляция обязательна, так как это и обозначает принадлежность атриубта к элементу
[[/code]]
[[script-last type=bxl]]

Ничто не мешает распределить атриуты не по одному а группами

[[code]]
a x=1 y=2 z=3
	a=4 b=5 c=6
	d=7 e=8 g=9
[[/code]]
[[script-last type=bxl]]

Напомним, что запятая - игнорируемый символ для BXL, существующий только для читаемости

[[code]]
a x=1 y=2 z=3
	a=4, b=5, c=6
	d=7,,,, e=8,,,, g=9
[[/code]]
[[script-last type=bxl]]

Это же свойство синтаксиса позволяет определять атрибуты ***после элементов***, что крайне упрощает сопровождение кода

[[code]]
a x=1 y=2 z=3
	b
	c
a x=1
	b
	y=2
	c
	z=3
[[/code]]
[[script-last type=bxl]]

== BXL не контроллирует уникальность атрибутов

В силу того, что BXL активно используется в B# и в сценариях, связанных с доменными языками BXL позволяет повторную установку атрибутов по логике "побеждает последний".



Это свойство неоднозначное, так как может повлечь ошибки и поэтому может быть отключено в опциях парсера. При этом это не распространяется на атрибуты id,code,name - они обрабатываются отдельно и всегда следуют правилу "последний побеждает"

Но по умолчанию:

[[code]]
a x=1 x=2 x=3
[[/code]]
[[script-last type=bxl]]

== Как и в случае с элементами - следите за уровнем вложенности

Тут надо помнить что по умолчанию BXL ведет стек уровней и соответсвенно пытается разнести атрибуты

[[code]]
a
	b # появился элемент первого уровня
	x=1 # это атрибут в a
		y=2 # а этот пойдет в b
	z=3 # снова в a
		u=4 # а этот снова в b
		с # появился элемент второго уровня
			w=5 # это атрибут для code
		q=6 # а этот все еще в b
	s=7 # а этотм в a
[[/code]]
[[script-last type=bxl]]


	







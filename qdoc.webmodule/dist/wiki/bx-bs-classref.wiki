{style:float:right;}Языки BXL/B# - руководство{style}
{style:float:left;}Ссылки на классы B#{style}
[bx-index Вернуться к оглавлению]


= Ссылки на классы B#

Ссылки на классы позволяют связывать различные классы B# по имени, что помимо логической связи обеспечивает еще и целостность данных.

Допустим в "обычном" XML нам ничего не помешает сформировать такой документ:

[[script type=bxl]]
server portal port=80 url="http://${.code}.domain.ru:%{port}"
farm
	node 1
		server defintion=pzortal
[[/script]]

В данном примере авторы документа допустили опечатку, неправильно прописав код сервера в поле defintion

Ссылку можно определить в качестве значения атрибута в формате ***^CLASSREF***, где CLASSREF любой класс в видимости текущего, по видимости классов см. [bx-bs-nsclasses классы и пространства имен]


== Короткие имена

Ссылки естественным образом также могут использоваться с короткими именами

Например

[[code]]
namespace A
	namespace B
		namespace C
			class X
class Target refto = ^X
[[/code]]
[[script-last type=bsharp]]

Короткая ссылка замещена полным именем класса, что позволит коду клиенту легко обнаружить нужный класс
	


== Контроль ссылочной целостности

B# позволяет явно определять ссылки на другие классы с контроллем целостности, например допустим сходную ошибку из примера в начале статьи, но используя уже B#


[[code]]

class server abstract url="http://${.code}.domain.ru:%{port}"
class farm abstract
	element node
	
server portal port=80 
farm main 
	node 1
		server defintion=^pzortal
[[/code]]
[[script-last type=bsharp]]

Как мы видим - значение атрибута заменяется четким и однозначно читаемым значением ***NOTRESOLVED::pzortal***, которое легко проанализировать, также в информации компилятора будет присутствовать соответствующая ошибка

== Контроль однозначности ссылки

Кроме контроля за возможностью резолюции ссылки, B# контроллирует и ее однозначность

[[code]]
namespace A
	namespace B
		namespace C
			class X
namespace D
	namespace E
		namespace F
			class X
class Target refto = ^X # тут будет ошибка
class Target2 refto = ^F.X
class Target3 refto = ^C.X
[[/code]]
[[script-last type=bsharp]]

Как мы видим - однозначные ссылки сопоставлены, а неоднозначная префиксирована и имеет значение ***AMBIGOUS::X***, также формируется соотвествующая ошибка компилятора


== Контроль доступности класса во время выполнения

Как было описано в других разделах - B# не формирует из абстрактных классов XML, а только использует их в качестве основы для наследования, соответственно ссылки на них являются заведомо пустыми для клиентского кода XML. Соответственно ссылки на абстрактные классы также блокируются омпилятором, возьмем предыдущий пример, но исправим директиву одного из классов X

[[code]]
namespace A
	namespace B
		namespace C
			class X abstract
namespace D
	namespace E
		namespace F
			class X
class Target refto = ^X 
class Target2 refto = ^F.X
class Target3 refto = ^C.X
[[/code]]
[[script-last type=bsharp]]

/ Внимание! Кроме достаточно ясной ошибки, связанной с абстракцией появилось еще и предупреждение о том, что ссылка ^X определена "косвенно", хотя в самом первом примере про короткие имена все было без предупреждений. Это связано именно с тем, что компилятор B# видит, что потенциально имелась в виду ссылка на абстрактный класс A.B.C.X, а не на D.E.F.X, тогда как в том более раннем примере про короткие именя такое противоречие было полностью исключено (класс с именем X существует в единственном экземпляре

См. далее [bx-bs-globals Глобальные константы]
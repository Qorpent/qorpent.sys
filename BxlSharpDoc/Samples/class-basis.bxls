# Copyright Comdiv 2007-2013
# qorpent.sys bxl#

###############################################
# ДАННЫЙ ПРИМЕР ПОКАЗЫАЕТ                     #
# БАЗОВУЮ РАБОТУ С КЛАССАМИ					  #
# режим работы с тестом                       #
# UseInterpolation = true                     #
# BxlSharp = true                             #
###############################################

# самый простой класс
class HelloWorld

#иморптирование одного класса в другой
class base
	content A
class base2
	content A2
class child
	import base
	import base2
	content B

#импортирование через имя элемента (для первого в списке импорта)
base child2 
	import base2
	content B2

##################################################################################################
# ИМПОРТИРОВАНИЕ И ИНТЕРПОЛЯЦИЯ (см interpolation.bxl)
# интерполяция в Bxl# осущестляется И по уровням вложенности и по ИМПОРТИРОВАННЫМ классм
##################################################################################################

#простой пример
#в классе I2 оба контента будут иметь одинаковый атрибут y
#это стандартный режим, позволяющий сделать шаблон в базовом классе,
#а в основном переопределить его и заполнить
# ОСНОВНОЕ ПРАВИЛО ПРИ ИМПОРТЕ - сначала импорт ИСХОДНОГО КОДА КЛАССА, потом ИНТЕРПОЛЯЦИЯ всего получившегося контента
class I1 x='2'
	content A y='${x}'
class I2 x='3'
	import I1
	content B y='${x}'
	
#если же нам нужно импортировать тему уже после того как она закомпилирована,
#то это указывается в самой этой теме - такие темы называются СТАТИЧЕСКИМИ
#в данном случае content A будет содержать y='2' так как он импортируется уже в скомпилированном виде
# то есть статики СНАЧАЛА КОМПИЛИРУЮТСЯ, а потом уже в этом виде импортируются
class I1s x='2' static
	content A y='${x}'
class I2s x='3'
	import I1s
	content B y='${x}'
	
################################################################################################################	
# СКРЫТИЕ ИЗ РЕЗУЛЬТАТОВ СЛУЖЕБНОЙ ИНФОРМАЦИИ
# многие атрибуты и классы могут иметь исключительно внутреннее назначение и не должны присутствовать в результатах компиляции
################################################################################################################

# абстрактные классы - прячутся из результатов целиком, но участвуют в компиляции
class testAb abstract x=1
testAb testAb_child
# приватные атрибуты, начинающиеся на "_"  - прячутся из результатов, но участвуют в компиляции
# класс получит атрибут имя, но составляющие имени будут удалены
class privA '${_a}${_b}${_c}' _a=1 _b=2 _c=3 

	
	


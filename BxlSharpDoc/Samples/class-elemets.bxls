# Copyright Comdiv 2007-2013
# qorpent.sys bxl#

###############################################
# ДАННЫЙ ПРИМЕР ПОКАЗЫАЕТ                     #
# БАЗОВУЮ РАБОТУ C ЭЛЕМЕНТАМИ КЛАССА		  #
# режим работы с тестом                       #
# Interpolation = true                        #
# BxlSharp = true                             #
###############################################

# классы создаются как правило для того,чтобы содержать какой-то вложенный контент
# и в простом случае нам достаточно сочетания 
# НАСЛЕДОВАНИЯ с ИНТЕРПОЛЯЦИЕЙ (class-base.bxls) 
# и УСЛОВНОЙ КОМПИЛЯЦИИ (class-conditional.bxls)
# Но иногда бывает необходимо, чтобы дочерние классы могли перекрывать и донастраивать
# совершенно определенные ЭЛЕМЕНТЫ внутри классов, которые они импортируют
# для этогов Bxl# есть понятие ЭЛЕМЕНТА КЛАССА (не путать с элементом XML)

# cначала просто покажем, как можно определить элемент класса
# как правило это делается в каких-то базовых абстрактных классах (но не обязательно)
# при помощи ключевого слова element система информируется, что теперь 
# элементы XML с именем "item" следует рассматривать как ЭЛЕМЕНТЫ КЛАССА

class el1 abstract
	element item
	
#теперь собственно определим элемент класса
#и унаследуемся
class el2 abstract
	element item
	item X1 x=1 y=1
	item X3
class el2_child 
	import el2
	item X1 x=2 
	item X2

#что мы видим? при обычном наследовании получилось бы 4 элемента - X1,X2,X1,X3,
#но элементы КЛАССА обязательно проверяют КОД и рассматривают элементы с одним кодом как один и тот же элемент
#в итоге у нас импорт состоит из X1,X2,X3, при этом X1 в теме el2_child ПОЛНОСТЬЮ вытеснил собой X1 из el2

# но ведь очень часто надо не ПОЛНОСТЬЮ перекрыть элемент, а только ЧАСТИЧНО, для
# этого используется специальная нотация ~ELEMENT_NAME

class el3 abstract
	element item
	item X1 x=1 y=2 z=3
		body1
class el3_child 
	import el3
	~item X1 z=4
		body2
		
# Как уже  можно догадаться - мы получаем X1 с перекрытым "нутром" и атрибутом "z", но x,y остаются нетронутыми


# а что если нам надо просто дописать что-то в элемент, дополнить или выставить атрибуты?
# для этого у нас используется нотация +ELEMENT_NAME
# возьмем сходный пример
class el4 abstract
	element item
	item X1 x=1 y=2 z=3
		body1
class el4_child
	import el4
	+item X1 z=4 w=5
		body2
		
# и что на выходе? - тело item X1 состоит и из body1 и body2, при этом атрибут z НЕТРОНУТ, а w - ДОБАВЛЕН
# Но допустим, нам надо и перекрыть что-то и добавить. Не проблема

class el5 abstract
	element item
	item X1 x=1 y=2 z=3
		body1
class el5_child
	import el5
	~item z=4
	+item X1 w=5
		body2
		
# В данном случае мы принудили и перекрыть атрибут z и дописать атрибут w и участок тела

	
	

	
	


@import "application";
@import "tools";
@import "dropdown";
@import "scroller";
@import "toolwindow";
@mixin page() {
  body {
    @include hyphens(auto);
    text-align: justify;
    color: color(dark);
    background-color: color(light);
    line-height: skin(page line-height, 1.4);
    font-family: skin(page font-family, (Arial, sans-serif));
    font-size: skin(page md-font-size, 16px);
    .fa {
      font-family: skin(page font-family, (Arial, sans-serif)) !important;
    }
    input {
      font-size: inherit;
      padding-left: 5px;
      outline: none;
      margin-top:10px;
      &:focus{
        outline: none;
      }
    }
    ::selection {
      color: color(primary, text);
      background-color: color(primary);
    }
    @media screen and (max-width: skin(page lg-screen-width, 2000px)) and (min-width: skin(page md-screen-width, 1600px)) {
      font-size: skin(page lg-font-size, 20px);
    }
    @media screen and (max-width: skin(page sm-screen-width, 1100px)) {
      font-size: skin(page sm-font-size, 14px);
    }
    @media print {
      color:#000000;
      background-color: #ffffff;
      font-size: skin(pr-font-size, 10pt);
    }
  }

}

@mixin boxes(){
  .box {
    display: flex;
    &.col {
      flex-direction: column;
    }
    &.row{
      flex-direction: row;
    }

    .collapsed {
      flex-grow: 0 !important;
      >.content {
        display: none !important;
      }
    }

    .content {
      overflow-x: hidden;
      overflow-y: auto;
      flex: 1;
    }
  }
  .block {
    display: block;
  }
  .filler {
    width: 100%;
  }

  @each $i in (1,2,3,4,5,6,7,8,9,10) {
    .flex#{$i} {
      flex-grow : $i;
    }
  }
}

@mixin labels (){
  label {
    margin-top:5px;
    margin-bottom: 5px;
  }
}

@if global_variable_exists(root) {
  html.#{$root} {
    @include page();
    @include application();
    @include tools();
    @include dropdown();
    @include defaultschemas(false,false,"");
    @include scroller();
    @include boxes();
    [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak, .hidden {
      display: none !important;
    }
    @include labels();
  }
}

.tlicon {
  color : color(primary);
}

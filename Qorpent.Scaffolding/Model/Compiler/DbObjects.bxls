namespace Qorpent.Db
	class BaseObject "Абстрактные определения и константы" abstract
		file=${_file}
		schema=dbo
		isdataobject = true
		element datatype
		element trigger
		element function
		element view
		element void
		element index
		element int
		element long
		element string
		element text
		element shortstring
		element longstring
		element text
		element datetime
		element bool
		element dictso
		datatype int type=Int32 sql=int
		datatype long type=Int64 sql=bigint
		datatype string type=String size=255 sql=nvarchar
		datatype shortstring type=String size=20 sql=nvarchar
		datatype longstring type=String size=400 sql=nvarchar
		datatype text type=String size=-1 sql=nvarchar
		datatype datetime type=DateTime sql=datetime
		datatype decimal type=Decimal size=18 precession=6 sql=decimal
		datatype bool type=Boolean sql=bit
		datatype dictso type="IDictionary<string,object>"
		_timestampstr = "CAST(CAST(CURRENT_TIMESTAMP as float) as char)"
		fullname = "${schema}.${code}"
	
	BaseObject FileGroupBase prototype=filegroup abstract
		element file

	class DbScript "Прокси класс для связываения внешнего скрипта SQL в состав генерации" prototype=dbscript abstract

	class TableBase "Абстрактная таблица" abstract prototype=dbtable
		implements IWithId 
		implements IWithVersion
		import BaseObject
		int Id "Идентификатор" primarykey identity idx=10  override=Entity
		datetime Version "Версия записи" default=(CURRENT_TIMESTAMP) idx=980  override=Entity
		int ImportId "Идентификатор старой сущности при миграции" idx=990 nocode
		view Full 
			selffields


	class IWithCode "Сущность с кодом" abstract
		implements IWithCode
		string Code "Уникальный запоминаемый бизнес-код" unique idx=200 override=Entity
		string GetCode @id=int : (
			return (select Code from @this where Id = @id )
		)
		string GetId @code=string  : (
			return (select Id from @this where Code = @code )
		)
		
	class IWithName "Сущность с именем" abstract
		implements IWithName
		string Name "Читаемое имя" idx=205  override=Entity
		
	class IWithIdx "Сущность с порядковым номером" abstract
		implements IWithIndex
		int Idx "Порядковый номер в списках" idx=215  override=Entity
	
	class IWithExtendedName "Сущность с расширенями имени" abstract
		implements IWithComment
		string OuterCode "Внешний код для связи со сторонними системами"  idx=210 override=Entity
		string ShortName "Сокращенное имя" idx=220
		longstring FullName "Полное имя" idx=225
		longstring Comment "Комментарий" idx=230  override=Entity
		
	class IWithCodeHistory "Поддержка ведения истории кодов" abstract
		import IWithCode
		string AliasCodes "Устаревшие коды"
			comment = "Позволяет замещать коды с сохранением истории их изменений, при нахождении ID по коду система учитывает и текущий код и прежние коды"
			bsharp = "Копируется"
			idx=970
		trigger UpdateAliasCode "Триггер прокачки прежних кодов сущности" update : (
			if ( UPDATE (Code) ) begin
				update @this set AliasCodes = replace( r.AliasCodes+'/'+d.Code+'/','//','/' )	
					from deleted d join @this r on r.Id = d.Id and r.Code!=d.Code and r.AliasCodes not like '%/'+d.Code+'/%'
			end		
		)
	
	class IWithUpgradeSequence "Интерфейс для поддержания автоматического обновления последовательностей" abstract
		trigger UpgradeSequence "Триггер обновления SEQUENCE" update insert : (
			if ( UPDATE (Id) ) begin
				declare @maxid int set @maxid  = (select max(Id) from @this )
				declare @currentseq int set @currentseq = (SELECT cast(current_value as int) FROM sys.sequences WHERE name = '${.code}_SEQ'  and schema_id = SCHEMA_ID('${.schema}'))
				if @currentseq <  @maxid begin
					set @currentseq = ( (@maxid  + 10) / 10 ) * 10
					declare @q nvarchar(max) set @q = N'ALTER SEQUENCE ${fullname}_SEQ RESTART WITH ' + cast(@currentseq as nvarchar(255))
					exec sp_executesql @q
				end
			end		
		)
		
	class IEntity "Описание сущности" abstract
		implements Entity
		import IWithCode
		import IWithIdx
		import IWithName
		import IWithActivity
		import IWithTag

	class IWithProperties  "Интерфейс класс с локальными свойствами на уровне объектного кода"
		implements IWithProperties
		dictso LocalProperties resolve=5 nosql clone qorpent-hide=Entity

	class IWithHierarchy "Интерфейс иерархической сущности" abstract
		implements "IWithSimpleHierarchy<${.code}>"
		ref Parent "Ссылка на родительский элемент" to="${fullname}.Id" idx=233 reverse=Children auto resolve=100
		string Path "Сформированный полный путь сущности" idx=234
		string GetPath "Расчет полного пути к элементу" @id=int   : (
			declare @code nvarchar(255), @parent int, @result nvarchar(255);
			if ( isnull(@id,0) = 0 ) return '/';
			select @code = Code, @parent = Parent from @this where Id = @id;
			if ( isnull(@parent,0) = 0 ) return isnull('/'+@code+'/','_NULL_');
			if ( @parent = -1 ) return isnull('/'+@code+'/','_NULL_');
			return ISNULL( @this.GetPath( @parent ) + @code + '/', '_NULL_');
		)
		trigger InsertInitPath "Триггер прокачки пути при добавлении элемента" insert : (
			update ${fullname} set Path = ${fullname}GetPath(Id) where Id in (select Id from inserted)
			update ${fullname} set Path = ${fullname}GetPath(Id) where Path like '%_NULL_%'
		)
		trigger UpdateSetPath "Триггер прокачки пути при обновлении элемента" update : (
			if ( UPDATE (Code) or Update(Parent) ) begin
				update ${fullname} set Path = @this.GetPath(t.Id) 
					from deleted d join @this t on t.Path like '%/'+d.Code+'/%'
			end		
		)
		+view Full "Вид полного нормализованного представления строк"
			reffields
				by Parent
				use Code,Name

	class IWithActivity "Интерфейс сущности со сроками существования" abstract
		implements IWithDateRange
		implements IWithActive
		datetime Start "Признак начала существования элемента" default=('19000101') idx=240 csharp-default='Qorpent.QorpentConst.Date.Begin'
		datetime Finish "Признак окончания существования элемента" default=('30000101') idx=245 csharp-default='Qorpent.QorpentConst.Date.End'
		bool Active "Признак общей активности"
		bool IsActive @id=int @d=datetime : (
			if exists (
				select top 1 this.id from @this this where this.id = @id and this.Active = 1 and @d between this.Start and this.Finish
			) return 1
			return 0
		)
		
	class IWithMetadataBind "Связывает сущность с банком метаданных" abstract
		ref MetaFile "Файл метаданных" idx=910 to="${_metatable}.Id"
		string Revision "Ревизия, логическая версия" idx=911
		
	class IWithTag "Привязывает поддердку тегов" abstract
		implements IWithTag
		longstring Tag "Теги" idx=250 override=Entity resolve=10
		
	class IWithGroups "Привязывает поддердку групп" abstract
		longstring Groups "Список групп" idx = 810
	
	class IWithSecurityInfo "Привязывает поддердку групп" abstract
		string SecurityInfo "Условия доступа" idx = 912
		
	class IWithValue "Привязывает поддердку групп" abstract
		string Value "Значение"
	
		
# Copyright Comdiv 2007-2013
# qorpent.sys B#

###############################################
# ДАННЫЙ ПРИМЕР ПОКАЗЫАЕТ                     #
# ОШИБКИ, ОБРАБАТЫВАЕМЫЕ СИСТЕМОЙ			  #
# режим работы с тестом                       #
# Interpolation = true                        #
# BxlSharp = true                             #
###############################################

# компилятор B# устроен таким образом, что он 
#  а) никогда не свливается с ошибкой (всегда доходит до конца)
#  б) старается по максимуму скомпилировать классы из того что есть
# такая политика связана с тем, что проекты на B# могут быть очень разнородными,
# включать одновременную работу разных причем порой некомпетентных исполнителей
# но это не значит, что компилятор не замечает ошибок
# по ходу своей работы он собирает все найденные ошибки и возвращает их в едином списке
# поддерживается 3 типа сообщений
# ОШИБКИ (Error) - моменты в коде ЯВНО свидетельствующие о том что что-то не так
# ПРЕДУПРЕЖДЕНИЯ (Warning) - моменты в коде с одной стороны легальные, с другой стороны подозрительные
# СОВЕТЫ/ЗАМЕЧАНИЯ (Hint) - моменты, не являющиеся сами по себе проблемой, но которые можно сделать лучше

# ВСЕ ПРИМЕРЫ, ПРИВЕДЕННЫЕ НИЖЕ - ОБЯЗАТЕЛЬНО ВЫПОЛНИТЬ В ОТЛАДЧИКЕ И УБЕДИТЬСЯ, ЧТО
# СООБЩЕНИЕ ОБ ОШИБКЕ ВЫВОДИТСЯ, ЧТОБЫ НАБИТЬ РУКУ НА ИХ ПРОЧТЕНИИ И ПОНМИАНИИ

#####################################################################################
# 1. ОШИБКИ ЗАГРУЗКИ КЛАССОВ                    #####################################
#####################################################################################

#############################################################
# 1.1 ОШИБКА ДУБЛИРОВАНИЯ КЛАССА (DuplicateClassNames , 100)
# возникает если в исходных файлах в 2-х местах встретился класс с одинаковым полным именем
# система в этом случае оставляет ПЕРВЫЙ ВСТРЕЧЕННЫЙ ЕЮ ФАЙЛ
# и это очень серьезная ошибка, так как явно не отвечает смыслу, заложенному автором кода
 
#простой пример
class dubA
class dubA
#посложнее пример (эмулируем ситуацию, когда сначала было все нормально, а потом при коррекции 
# пространств имен получился дубляж)
namespace A
	namespace B
		namespace C
			class dubA
namespace A.B.C
	class dubA
	
#############################################################
# 1.2 ОШИБКА КЛАСС - СИРОТА (OrphanClass, 110 )
# возникает если класс создан не с ключевым словом class,
# но при этом класс, от которого он мог бы унаследоваться
# не найден, также сиротами считаются те классы, у которых 
# родители - сироты
# очень серьезная ошибка ибо классы сироты в компиляции и результатах не
# не участвуют

#простой пример
test A #это сирота, класс test неопределен
#посложнее пример
test A2 #это сирота, класс test неопределен
A2 B  #это сирота, класс A2 хотя и определен, но сирота


#############################################################
# 1.3 ОШИБКА - НЕИЗВЕСТНЫЙ ИМПОРТ (NotResolvedImport , 210)
# возникает, если класс пытается импортировать несуществуюший файл
# достаточно серьезно, так как просто так импорты не пишут
# свидетельствует об опечатках, невключенных файлах или путанице в 
# пространствах имен

class iA
	import iB
	
	
#############################################################
# 1.4 ОШИБКА -  ИМПОРТ СИРОТЫ (OrphanImport , 220)
# возникает, если класс происходит попытка импорта класса
# сироты (см выше) - и соответственно такой импорт игнорируется

test iB2 #это сирота, класс test неопределен
class iA2
	import iB2
	
#############################################################
# 1.5  ОШИБКА -  ЦИРКУЛЯРНЫЙ ИМПОРТ (RecycleImport , 230)
# возникает, если класс импортирует класс, который в итоге
# пытается импортировать первый и круг замыкается, очевидно
# что импорт в таком случае не может быть произведен адекватно
# рассматривался вопрос взаимо-слияния таких классов, но семантика
# этой операции в условиях множественного наследования совершенно непонятна
# и была отвергнута
# система разрубает этот круг НО ОБА КЛАССА остаются без этого импорта
# очевидная ошибка кодирования и планирования кода

# простой пример
class riA 
	import riB
class riB
	import riA
# более сложный пример (через несколько уровней импорта)
# и более вероятный, когда в силу каких-то перестановок
# базовый класс заводится неверно (в данном случае компилятор вернет сразу 4
# ошибки, так как в результате все 4 класса имеют неправильную
# рассогласованную картину импортов
class ribase
	import riA2
class riA2
	import riB2
class riB2
	import riC2
class riC2
	import ribase
	
#############################################################
# 1.5  ПРЕДУПРЕЖДЕНИЯ -  СОЗДАНИЕ КЛАССОВ ИЗ ПЕРЕКРЫТИЙ И РАСШИРЕНИЙ 
# (ClassCreatedFormOverride,1010  и  ClassCreatedFormExtension, 1020)
# возникает, если в коде содержатся только перекрытия и расширения,
# а самого класса нет. Это именно предупреждение, так как
# во-первых класс все же воссоздается из перекрытий и расширений, а
# во-вторых есть дизайн организации классов, где это предпочтительная схема
# (чтобы если нет ни одного перекрытия класс по сути отсутсвует)
~class overA # так как class overA нет - будет создан отсюда
+class extA # так как class extA нет - будет создан отсюда


